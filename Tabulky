-- tabulka 1:


CREATE TABLE t_marie_koblizkova_project_SQL_primary_final AS
SELECT 
    mzdy.rok_mzdy,
    ceny.rok_ceny, 
    ceny.kod_zbozi, 
    ceny.nazev_zbozi, 
    ceny.prumerna_cena, 
    mzdy.kod_odvetvi, 
    mzdy.odvetvi, 
    mzdy.prumerna_mzda
FROM (
    SELECT 
        cpr.category_code AS kod_zbozi,
        cpc.name AS nazev_zbozi, 
        ROUND(AVG(cpr.value)::numeric, 2) AS prumerna_cena, 
        date_part('year', cpr.date_from)::int AS rok_ceny
    FROM czechia_price cpr
    LEFT JOIN czechia_price_category cpc
        ON cpr.category_code = cpc.code
    GROUP BY cpr.category_code, cpc.name, date_part('year', cpr.date_from)::int
) ceny
LEFT JOIN (
    SELECT 
        cpib.code AS kod_odvetvi, 
        cpib.name AS odvetvi, 
        round(AVG(cpay.value)::numeric, 2) AS prumerna_mzda, 
        cpay.payroll_year AS rok_mzdy
    FROM czechia_payroll cpay
    LEFT JOIN czechia_payroll_industry_branch cpib
        ON cpay.industry_branch_code = cpib.code
    WHERE cpay.value_type_code = 5958
        AND cpay.calculation_code = 100    
        AND cpay.unit_code = 200
        AND cpay.industry_branch_code IS NOT NULL
    GROUP BY cpib.code, cpib.name, cpay.payroll_year
) mzdy
    ON ceny.rok_ceny = mzdy.rok_mzdy
ORDER BY ceny.rok_ceny DESC, ceny.prumerna_cena ASC, mzdy.prumerna_mzda ASC;
	
		
SELECT *
FROM t_marie_koblizkova_project_SQL_primary_final;



-- tabulka 2:


CREATE TABLE t_marie_koblizkova_project_SQL_secondary_final AS
	SELECT
	    e.country,
	    e.year,
	    e.gdp,  
	    c.population,  
	    e.gini  
	FROM  economies e
	LEFT JOIN countries c
	    ON e.country = c.country
	WHERE 
		e.year BETWEEN 2006 AND 2018
	    AND continent = 'Europe'
		AND continent IS NOT NULL 	
	ORDER BY country, YEAR;
	
	
	
 SELECT *
 FROM t_marie_koblizkova_project_SQL_secondary_final;
 
